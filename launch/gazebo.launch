<launch>

<arg name="paused" default="false"/>
<arg name="use_sim_time" default="true"/>
<arg name="gui" default="true"/>
<arg name="headless" default="false"/>
<arg name="debug" default="false"/>

<arg name="model" default="$(find jackal)/urdf/jackal_hulk.urdf.xacro"/>


<include file="$(find gazebo_ros)/launch/empty_world.launch">
<arg name="debug" value="$(arg debug)" />
<arg name="world_name" value="$(find jackal)/worlds/world.world" />
<arg name="gui" value="$(arg gui)" />
<arg name="paused" value="$(arg paused)"/>
<arg name="use_sim_time" value="$(arg use_sim_time)"/>
<arg name="headless" value="$(arg headless)"/>
</include>

<arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz"/>
<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)"/>
<param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>



<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-z 0.0 -param robot_description -urdf -model jackl_hulk "/>


<rosparam command="load" file="$(find jackal)/config/controllers.yaml" />
<node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/jackal_hulk" args="diff_drive_controller hulk_controller/joint6_position_controller 
hulk_controller/joint7_position_controller
hulk_controller/joint8_position_controller
hulk_controller/joint9_position_controller
hulk_controller/joint10_position_controller
hulk_controller/joint11_position_controller" respawn="false" output="screen"/>

<rosparam command="load" file="$(find jackal)/config/joints.yaml" />
<node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>

<!-- Uncomment this if you want to control robot-vehicle manually controls: linear vel and angular vel -->

<node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering"> <param name="default_topic" value="jackal_hulk/diff_drive_controller/cmd_vel"/> 
</node> 



<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />


<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
  <param name="/use_gui" value="false"/> 
  <param name="/rate" value="100"/>
</node>

</launch>

